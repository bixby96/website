<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Music on Home</title>
    <link>/tags/music/</link>
    <description>Recent content in Music on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Chad Bixby</copyright>
    <lastBuildDate>Thu, 30 Aug 2018 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/tags/music/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spotify Anal-*YE*-sis</title>
      <link>/2018/08/30/spotify/</link>
      <pubDate>Thu, 30 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/08/30/spotify/</guid>
      <description>&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#exploratory-data-analysis&#34;&gt;Exploratory Data Analysis&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#load-packages&#34;&gt;Load Packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#import-data&#34;&gt;Import Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#danceability&#34;&gt;Danceability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#valence&#34;&gt;Valence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#other-variables&#34;&gt;Other Variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#clustering&#34;&gt;Clustering&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#hierarchical-clustering&#34;&gt;Hierarchical Clustering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#principle-component-analysis&#34;&gt;Principle Component Analysis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;introduction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;As the &lt;a href=&#34;https://en.wikipedia.org/wiki/Internet_of_things&#34;&gt;Internet of Things&lt;/a&gt; (IoT) landscape continues to grow, practically everyone and everything, it seems, is compiling data or at least generating statistics for any variable imaginable. And music is no exception. The music streaming service, Spotify, stores an array of features for each song in its library. They record characteristics such as acousticness, danceability, energy and more. With these variables in mind, I conducted some exploratory analysis along with a couple clustering methods on Kanye West’s &lt;em&gt;Spotify&lt;/em&gt; discography. The following report utilizes Spotify’s Web API through Charlie Thompson’s &lt;code&gt;spotifyr&lt;/code&gt; package which you can check out &lt;a href=&#34;http://www.rdocumentation.org/packages/spotifyr&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;center&gt;
&lt;a id=&#39;N_ojmtFuShtIOBP5ugOPTQ&#39; class=&#39;gie-single&#39; href=&#39;http://www.gettyimages.com/detail/994892144&#39; target=&#39;_blank&#39; style=&#39;color:#a7a7a7;text-decoration:none;font-weight:normal !important;border:none;display:inline-block;&#39;&gt;Embed from Getty Images&lt;/a&gt;
&lt;script&gt;window.gie=window.gie||function(c){(gie.q=gie.q||[]).push(c)};gie(function(){gie.widgets.load({id:&#39;N_ojmtFuShtIOBP5ugOPTQ&#39;,sig:&#39;qWFJbSTJE8IEPUvJSx1oVvC5GR_qojY9INDpB7ctkm0=&#39;,w:&#39;594px&#39;,h:&#39;395px&#39;,items:&#39;994892144&#39;,caption: false ,tld:&#39;com&#39;,is360: false })});&lt;/script&gt;
&lt;script src=&#39;//embed-cdn.gettyimages.com/widgets.js&#39; charset=&#39;utf-8&#39; async&gt;&lt;/script&gt;
&lt;/center&gt;
&lt;/div&gt;
&lt;div id=&#34;exploratory-data-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Exploratory Data Analysis&lt;/h2&gt;
&lt;div id=&#34;load-packages&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Load Packages&lt;/h3&gt;
&lt;p&gt;The following code and plots make use of these packages:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(spotifyr)
library(tidyverse)
library(knitr)
library(kableExtra)
library(ggridges)
library(plotly)
library(scales)
library(ggfortify)
library(ggdendro)
library(dendextend)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;import-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Import Data&lt;/h3&gt;
&lt;p&gt;First let’s import the audio features for Kanye West and take a quick look at the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;kanye &amp;lt;- get_artist_audio_features(artist = &amp;quot;kanye west&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After viewing the data, I noticed a few tracks (rows) are duplicated since some albums contain edited, clean, and/or live versions. Those rows will be removed in addition to some irrelevant columns. Also let’s be sure we don’t have any missing values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;kanye2 &amp;lt;- kanye %&amp;gt;%
  filter(!(album_name %in% c(&amp;quot;808s &amp;amp; Heartbreak (Softpak)&amp;quot;, &amp;quot;Late Orchestration&amp;quot;, 
                             &amp;quot;The College Dropout (Edited)&amp;quot;, 
                             &amp;quot;Graduation (Alternative Business Partners)&amp;quot;))) %&amp;gt;%
    select(-c(artist_uri, album_uri, album_type, is_collaboration, track_uri,
            track_preview_url, album_release_year, artist_name, album_img, 
            album_release_date, track_open_spotify_url, track_number,
            disc_number, key, mode, key_mode, album_popularity, time_signature))

sum(is.na(kanye2))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The dataset we will be working with now has 125 rows and 13 columns with no missing observations!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;danceability&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Danceability&lt;/h3&gt;
&lt;p&gt;Spotify defines danceability as&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“How suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Before determining which album Spotify deems the most danceable, let’s take a look at how danceability is distributed on each album.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/spotify_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The dashed vertical line in the middle represents the midpoint on the danceability scale. Also, the smaller tick marks at the bottom of each shape represent one song on an album. Each album appears to be more danceable than not, but let’s weight each song by its duration to get a better picture of each album in its entirety. The following graph outlines the results.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;kanye_dance &amp;lt;- kanye2 %&amp;gt;%
  mutate(total_dance = danceability*duration_ms) %&amp;gt;%
  group_by(album_name) %&amp;gt;%
  summarise(avg_danceability = sum(total_dance)/length(album_name)/10000)&lt;/code&gt;&lt;/pre&gt;
&lt;iframe width=&#34;800&#34; height=&#34;500&#34; frameborder=&#34;0&#34; scrolling=&#34;no&#34; src=&#34;//plot.ly/~bixby96/5.embed?link=false&amp;amp;logo=false&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;Overall, &lt;em&gt;My Beautiful Dark Twisted Fantasy&lt;/em&gt; and &lt;em&gt;808s &amp;amp; Heartbreak&lt;/em&gt; represent Kanye’s most danceable albums. The following table lists his top 10 most danceable songs.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;kanye_dance_songs &amp;lt;- kanye2 %&amp;gt;%
  arrange(desc(danceability)) %&amp;gt;%
  select(album_name, track_name, danceability)

kable(head(kanye_dance_songs, 10)) %&amp;gt;%
    kable_styling(full_width = F)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
album_name
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
track_name
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
danceability
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
ye
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
All Mine
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.925
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Late Registration
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Gone
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.851
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
KIDS SEE GHOSTS
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kids See Ghosts
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.841
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
The Life Of Pablo
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Feedback
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.837
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
The Life Of Pablo
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
30 Hours
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.822
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
808s &amp;amp; Heartbreak
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Paranoid
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.812
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
808s &amp;amp; Heartbreak
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Heartless
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.789
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yeezus
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Black Skinhead
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.775
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
The Life Of Pablo
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Facts (Charlie Heat Version)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.769
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
KIDS SEE GHOSTS
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
4th Dimension
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.765
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;valence&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Valence&lt;/h3&gt;
&lt;p&gt;Spotify defines Valence as&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry)”&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Again, let’s look at the overall distribution for each album, but for valence this time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/spotify_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Perhaps a bit more polarizing than the danceability metric, most albums seem to have their fair share of both positive and negative sounding songs. Now weighting valence by song duration, let’s discover Kanye’s happiest (and saddest) album.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;kanye_val &amp;lt;- kanye2 %&amp;gt;%
  mutate(total_valence = valence*duration_ms) %&amp;gt;%
  group_by(album_name) %&amp;gt;%
  summarise(avg_valence = sum(total_valence/length(album_name)/10000))&lt;/code&gt;&lt;/pre&gt;
&lt;iframe width=&#34;800&#34; height=&#34;500&#34; frameborder=&#34;0&#34; scrolling=&#34;no&#34; src=&#34;//plot.ly/~bixby96/3.embed?link=false&amp;amp;logo=false&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;With a valence score of 14.68, the happiest Kanye release came way back in 2004 with his debut hit &lt;em&gt;The College Dropout&lt;/em&gt;. Interestingly, the four albums with the lowest valence score also make up his most recent work. The tracks with the lowest valence scores are shown below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;kanye_valence_songs &amp;lt;- kanye2 %&amp;gt;%
  select(album_name, track_name, valence) %&amp;gt;%
  arrange(valence)

kable(head(kanye_valence_songs,10)) %&amp;gt;%
    kable_styling(full_width = F)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
album_name
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
track_name
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
valence
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
The Life Of Pablo
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Frank’s Track
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yeezus
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hold My Liquor
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0399
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
ye
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Violent Crimes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0400
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
The Life Of Pablo
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Waves
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0565
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
808s &amp;amp; Heartbreak
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Welcome To Heartbreak
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0734
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Graduation
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Can’t Tell Me Nothing
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0963
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
My Beautiful Dark Twisted Fantasy
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Monster
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0964
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Graduation
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
I Wonder
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1060
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
My Beautiful Dark Twisted Fantasy
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Runaway
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1090
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
The Life Of Pablo
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Wolves
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1180
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;other-variables&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Other Variables&lt;/h3&gt;
&lt;p&gt;Interested in exploring the rest of the variables? Choose which characteristics to plot and select which albums to compare using the interactive graph below!&lt;/p&gt;
&lt;iframe width=&#34;800&#34; height=&#34;700&#34; frameborder=&#34;F&#34; src=&#34;https://chadbixby.shinyapps.io/kanye-song-attributes/&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;clustering&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Clustering&lt;/h2&gt;
&lt;div id=&#34;hierarchical-clustering&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Hierarchical Clustering&lt;/h3&gt;
&lt;p&gt;Now on to some clustering methods. Let’s determine which albums sound the most alike using hierarchical clustering. A tree with a height of 4 and complete linkage is shown below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;kanye3 &amp;lt;- kanye2 %&amp;gt;%
  select(-c(track_name, track_popularity)) %&amp;gt;%
  group_by(album_name) %&amp;gt;%
  summarise(dance = sum(danceability*duration_ms)/length(album_name),
            energy = sum(energy*duration_ms)/length(album_name),
            loudness = sum(loudness*duration_ms)/length(album_name),
            speechiness = sum(speechiness*duration_ms)/length(album_name),
            acousticness = sum(acousticness*duration_ms)/length(album_name),
            instrumentalness = sum(instrumentalness*duration_ms)/length(album_name),
            liveness = sum(liveness*duration_ms)/length(album_name),
            valence = sum(valence*duration_ms)/length(album_name),
            tempo = sum(tempo*duration_ms)/length(album_name)) %&amp;gt;%
  remove_rownames() %&amp;gt;%
  column_to_rownames(&amp;quot;album_name&amp;quot;)

kanye.hc &amp;lt;- hclust(dist(scale(kanye3)), method = &amp;quot;complete&amp;quot;)
kanye.tree &amp;lt;- dendro_data(kanye.hc, type = &amp;quot;rectangle&amp;quot;)
kanye.hc.4 &amp;lt;- cutree(kanye.hc, k = 4)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/spotify_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Kanye’s first three releases belong to one cluster while his last four belong to another. The middle releases, &lt;em&gt;808s &amp;amp; Heartbreak&lt;/em&gt; and &lt;em&gt;Twisted Fantasy&lt;/em&gt;, are not only his most danceable records but his most unique sounding as well; they each populate their own cluster.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;principle-component-analysis&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Principle Component Analysis&lt;/h3&gt;
&lt;p&gt;Now let’s use those variables and see if we can discover if his more popular songs score similarly for each variable. Using a PCA to reduce dimensionality and account for correlation we can try to reveal any patterns.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;kanye.pca &amp;lt;- prcomp(kanye2[,3:11], center = T, scale = T)
summary(kanye.pca)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Importance of components:
##                           PC1    PC2    PC3    PC4    PC5     PC6     PC7
## Standard deviation     1.5958 1.2793 1.0779 0.9988 0.9512 0.84785 0.69853
## Proportion of Variance 0.2829 0.1819 0.1291 0.1108 0.1005 0.07987 0.05422
## Cumulative Proportion  0.2829 0.4648 0.5939 0.7047 0.8053 0.88513 0.93934
##                            PC8     PC9
## Standard deviation     0.62701 0.39085
## Proportion of Variance 0.04368 0.01697
## Cumulative Proportion  0.98303 1.00000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using two principle components we can describe a little over 46% of the variability in the data (shown in the plot below). To explain at least 90% of the variability, we need to use 7 principle components. The following graph shows the top two principle components with the top quartile of his most popular songs mapped to one color and the rest to another.&lt;/p&gt;
&lt;iframe width=&#34;800&#34; height=&#34;600&#34; frameborder=&#34;0&#34; scrolling=&#34;no&#34; src=&#34;//plot.ly/~bixby96/1.embed?link=false&amp;amp;logo=false&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;The most popular songs don’t appear to belong to any specific area or cluster on the graph, but it does look like &lt;code&gt;Energy&lt;/code&gt; and &lt;code&gt;Loudness&lt;/code&gt; are correlated. Try graphing them using the interactive plot above!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>